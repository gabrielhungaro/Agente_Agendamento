{
  "name": "HandleReschedule_Start",
  "nodes": [
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Agente_Agendamento_HC",
        "remoteJid": "={{ $('SetInitialData').item.json.customerPhone }}@s.whatsapp.net",
        "messageText": "={{ $('Build Proposal - Ideal').item.json.messageToClient }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1872,
        -256
      ],
      "id": "245aaea0-1878-4f7d-8195-bc42dd6b07a1",
      "name": "Send to Client",
      "credentials": {
        "evolutionApi": {
          "id": "j5AbWpMg04wmHEJE",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Agente_Agendamento_HC",
        "remoteJid": "={{ $('SearchConsultant').item.json.property_phone.replace(/\\D/g, '') }}@s.whatsapp.net",
        "messageText": "={{ $('BuildConsultantMessage').item.json.messageToConsultant }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2352,
        -16
      ],
      "id": "1a2be66a-b835-4ced-bc02-b7434da0559a",
      "name": "Send to Consultant",
      "credentials": {
        "evolutionApi": {
          "id": "j5AbWpMg04wmHEJE",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "customerPhoneNumber"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -608,
        80
      ],
      "id": "cf279ed0-f5da-4a36-87b5-ef18e0b56daf",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "bf1094d6-c997-456f-82eb-cd30352c85c3",
          "mode": "list",
          "cachedResultName": "Lista de Contatos"
        },
        "returnAll": true,
        "filterType": "manual",
        "filters": {
          "conditions": [
            {
              "key": "clientPhone|formula",
              "condition": "contains",
              "returnType": "text",
              "textValue": "={{ $json.customerPhone }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        -128,
        80
      ],
      "id": "4b77d1e9-d3bf-482e-af83-b922495903a4",
      "name": "SearchClient",
      "credentials": {
        "notionApi": {
          "id": "D1pXvNxNoBaVi0WB",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "customerPhone",
              "value": "={{ $json.customerPhoneNumber.replace('@s.whatsapp.net', '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -368,
        80
      ],
      "id": "58ae4257-a2f3-49de-9dbc-5d1609e73569",
      "name": "SetInitialData"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "get",
        "pageId": {
          "__rl": true,
          "value": "={{ $('PrepareData').item.json.consultantId }}",
          "mode": "id"
        }
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        1872,
        -16
      ],
      "id": "ce424b8c-4e3d-4821-98e0-1fa03fad1b5e",
      "name": "SearchConsultant",
      "credentials": {
        "notionApi": {
          "id": "D1pXvNxNoBaVi0WB",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "c_7884974ab5a1eab27a106c4a78d7d6daf6c68570378b40d003382781ced7f9f4@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Teste - HC"
        },
        "returnAll": true,
        "timeMin": "={{ $now.toISODate() }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        80,
        80
      ],
      "id": "04291722-d883-4d58-8211-c8633eb0bbe5",
      "name": "GetMeet",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "Bct71lYLp9OoL4OX",
          "name": "Google HC"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Pega o e-mail do cliente que encontramos no Notion.\n// Usamos $items() para buscar de um nó anterior com segurança.\nconst clientEmail = $items('SearchClient')[0].json.property_e_mail;\n\n// Pega a lista de todos os eventos futuros que o Google Calendar retornou.\nconst allFutureEvents = $input.all();\n\n// Filtra essa lista para manter apenas os eventos onde o nosso cliente é um convidado.\nconst clientEvents = allFutureEvents.filter(event => {\n  // Verifica se a lista de convidados (attendees) existe.\n  if (!event.json.attendees) {\n    return false;\n  }\n  // Procura na lista de convidados por um que tenha o mesmo e-mail do nosso cliente.\n  return event.json.attendees.some(attendee => attendee.email === clientEmail);\n});\n\n// Se não encontrarmos nenhum evento para este cliente, retornamos um objeto vazio\n// para que o fluxo não quebre nos próximos nós.\nif (clientEvents.length === 0) {\n  return [{ json: { summary: 'Nenhum compromisso encontrado', start: { dateTime: new Date().toISOString() } } }];\n}\n\n// Ordena os eventos encontrados pela data de início, do mais próximo para o mais distante.\nclientEvents.sort((a, b) => new Date(a.json.start.dateTime) - new Date(b.json.start.dateTime));\n\n// Retorna apenas o primeiro item da lista ordenada, que é o próximo compromisso do cliente.\nreturn [clientEvents[0]];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        288,
        80
      ],
      "id": "d86966d7-9b53-437c-972a-1b1255f4a328",
      "name": "Filter and Select Meeting"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "displayName",
              "value": "={{ $('SearchClient').item.json.property_client_nick || $('SearchClient').item.json.name.split(' ')[0] }}",
              "type": "string"
            },
            {
              "id": "2",
              "name": "consultantId",
              "value": "={{ $('SearchClient').item.json.property_responsible_consultant[0] }}",
              "type": "string"
            },
            {
              "id": "f1de2c25-8c94-4c66-a01d-f6125c2840ec",
              "name": "meetingSummary",
              "value": "={{ $('Filter and Select Meeting').item.json.summary }}",
              "type": "string"
            },
            {
              "id": "c0635c4c-3014-4ec3-a8c2-4040553ea2fc",
              "name": "meetingDateTime",
              "value": "={{ DateTime.fromISO($('Filter and Select Meeting').item.json.start.dateTime).setZone('America/Sao_Paulo').toFormat('dd/MM/yyyy \\'às\\' HH:mm') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        944,
        80
      ],
      "id": "71f74c21-6260-4e04-a464-0c57ecb2451b",
      "name": "PrepareData"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "messageToConsultant",
              "value": "=✅ Reunião Confirmada\nOlá, {{ $('SearchConsultant').item.json.property_name }}. \nO cliente *{{ $('PrepareData').item.json.displayName }}* acabou de confirmar a reunião:\n*Compromisso:* {{ $('PrepareData').item.json.meetingSummary }}\n*Data e Hora:* {{ $('PrepareData').item.json.meetingDateTime }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2112,
        -16
      ],
      "id": "3c2e2422-595f-47ea-a8ea-ad62a8f42302",
      "name": "BuildConsultantMessage"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "c_7884974ab5a1eab27a106c4a78d7d6daf6c68570378b40d003382781ced7f9f4@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Teste - HC"
        },
        "returnAll": true,
        "timeMin": "= {{ DateTime.fromISO($('Filter and Select Meeting').item.json.start.dateTime).plus({ weeks: 1 }).toISO() }}",
        "timeMax": "={{ DateTime.fromISO($('Filter and Select Meeting').item.json.end.dateTime).plus({ weeks: 1 }).toISO() }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        512,
        80
      ],
      "id": "1ac76a29-63a4-42f4-8f2e-1a66af000bca",
      "name": "Check Next Week Slot",
      "alwaysOutputData": true,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "Bct71lYLp9OoL4OX",
          "name": "Google HC"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -816,
        -128
      ],
      "id": "c7dd1b63-f69f-421c-88a6-43f8f5c59e4f",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b3a48ed8-9226-446b-a893-129f29c0b009",
              "name": "customerPhoneNumber",
              "value": "5511989214740@s.whatsapp.net",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -608,
        -128
      ],
      "id": "c31161ae-de74-4a05-b4f2-7ec9ef448e01",
      "name": "ManualTestSet"
    },
    {
      "parameters": {
        "jsCode": "// Pega o primeiro item da entrada.\nconst item = $input.first().json;\n\n// Verifica se o item tem a propriedade 'id' e se essa propriedade não é nula/vazia.\n// A verificação 'item && item.id' é uma forma segura de checar.\n// Se 'item' for um objeto vazio {}, 'item.id' será undefined, e a condição será falsa.\nconst isOccupied = item && item.id;\n\n// Adiciona um campo 'status' ao item para o próximo nó (If) usar.\n// Se estiver ocupado, o status será 'occupied'. Caso contrário, 'free'.\nitem.status = isOccupied ? 'occupied' : 'free';\n\n// Retorna o item modificado.\nreturn item;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        80
      ],
      "id": "1583af1c-19d9-4f9b-a871-2e6c98b70373",
      "name": "Check if Slot is Truly Empty"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a8498514-31ea-4a2d-b354-97a273521561",
              "leftValue": "={{ $('Check if Slot is Truly Empty').item.json.status }}",
              "rightValue": "free",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1168,
        80
      ],
      "id": "fb13507f-5b48-41b8-8577-aa7d29301a4b",
      "name": "Route by Status"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b6ffd3c9-a8d5-4c9b-a994-6a30914edc53",
              "name": "messageToClient",
              "value": "=Olá, {{ $('PrepareData').item.json.displayName }}. Recebi seu pedido de reagendamento. Verifiquei que o mesmo horário na próxima semana ({{ DateTime.fromISO($('Filter and Select Meeting').item.json.start.dateTime).plus({ weeks: 1 }).setZone('America/Sao_Paulo').toFormat('dd/MM/yyyy \\'às\\' HH:mm') }}) está disponível. Podemos confirmar para esta data e horário?\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1488,
        -128
      ],
      "id": "956b7933-d06b-4323-a8bb-fe9eed2a079c",
      "name": "Build Proposal - Ideal"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Agente_Agendamento_HC",
        "remoteJid": "={{ $('SetInitialData').item.json.customerPhone }}@s.whatsapp.net",
        "messageText": "={{ $('Build Proposal - Alternative').item.json.messageToClient }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1872,
        192
      ],
      "id": "d2ea6a0a-828a-4480-9d43-b7f6b311406d",
      "name": "Send to Client1",
      "credentials": {
        "evolutionApi": {
          "id": "j5AbWpMg04wmHEJE",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Agente_Agendamento_HC",
        "remoteJid": "={{ $('SearchConsultant1').item.json.property_phone.replace(/\\D/g, '') }}@s.whatsapp.net",
        "messageText": "={{ $('BuildConsultantMessage1').item.json.messageToConsultant }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2352,
        432
      ],
      "id": "f67011f8-31bf-4709-928f-b6db3e1d847d",
      "name": "Send to Consultant1",
      "credentials": {
        "evolutionApi": {
          "id": "j5AbWpMg04wmHEJE",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "get",
        "pageId": {
          "__rl": true,
          "value": "={{ $('PrepareData').item.json.consultantId }}",
          "mode": "id"
        }
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        1872,
        432
      ],
      "id": "fb71089f-eaa8-4f6e-a9bc-d859c5363e39",
      "name": "SearchConsultant1",
      "credentials": {
        "notionApi": {
          "id": "D1pXvNxNoBaVi0WB",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "messageToConsultant",
              "value": "=✅ Reunião Confirmada\nOlá, {{ $('SearchConsultant1').item.json.property_name }}. \nO cliente *{{ $('PrepareData').item.json.displayName }}* acabou de confirmar a reunião:\n*Compromisso:* {{ $('PrepareData').item.json.meetingSummary }}\n*Data e Hora:* {{ $('PrepareData').item.json.meetingDateTime }}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2112,
        432
      ],
      "id": "da4d9f6e-337d-472e-9cc4-687f27f6d45c",
      "name": "BuildConsultantMessage1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b6ffd3c9-a8d5-4c9b-a994-6a30914edc53",
              "name": "messageToClient",
              "value": "=Olá, {{ $('PrepareData').item.json.displayName }}. Recebi seu pedido de reagendamento. Verifiquei que o mesmo horário na próxima semana ({{ DateTime.fromISO($('Filter and Select Meeting').item.json.start.dateTime).plus({ weeks: 1 }).setZone('America/Sao_Paulo').toFormat('dd/MM/yyyy \\'às\\' HH:mm') }}) está disponível. Podemos confirmar para esta data e horário?\n\n\nOlá, {{ $('PrepareData').item.json.displayName }}. Recebi seu pedido para reagendar. Infelizmente, o mesmo horário na próxima semana não está disponível. Poderia me dizer um dia ou período de sua preferência para eu verificar a disponibilidade?\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1488,
        320
      ],
      "id": "cd1254a3-780b-4662-826c-11d880f09ddc",
      "name": "Build Proposal - Alternative"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "value": "={{ $('SearchClient').item.json.id }}",
          "mode": "id"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "conversationStatus|select",
              "selectValue": "AWAITING_RESCHEDULE_CONFIRM"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        1872,
        -464
      ],
      "id": "eb652926-3dc5-4a8e-bc3c-9b4481aaf961",
      "name": "Update a database page",
      "credentials": {
        "notionApi": {
          "id": "D1pXvNxNoBaVi0WB",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "value": "={{ $('SearchClient').item.json.id }}",
          "mode": "id"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "conversationStatus|select",
              "selectValue": "AWAITING_RESCHEDULE_SUGGESTION"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        1872,
        304
      ],
      "id": "6e4d32d4-367b-483d-ab7b-48adab4e0f40",
      "name": "Update a database page1",
      "credentials": {
        "notionApi": {
          "id": "D1pXvNxNoBaVi0WB",
          "name": "Notion account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "SetInitialData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SearchClient": {
      "main": [
        [
          {
            "node": "GetMeet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SetInitialData": {
      "main": [
        [
          {
            "node": "SearchClient",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SearchConsultant": {
      "main": [
        [
          {
            "node": "BuildConsultantMessage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetMeet": {
      "main": [
        [
          {
            "node": "Filter and Select Meeting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter and Select Meeting": {
      "main": [
        [
          {
            "node": "Check Next Week Slot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PrepareData": {
      "main": [
        [
          {
            "node": "Route by Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BuildConsultantMessage": {
      "main": [
        [
          {
            "node": "Send to Consultant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Next Week Slot": {
      "main": [
        [
          {
            "node": "Check if Slot is Truly Empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "ManualTestSet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ManualTestSet": {
      "main": [
        [
          {
            "node": "SetInitialData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Slot is Truly Empty": {
      "main": [
        [
          {
            "node": "PrepareData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route by Status": {
      "main": [
        [
          {
            "node": "Build Proposal - Ideal",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Build Proposal - Alternative",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build Proposal - Ideal": {
      "main": [
        [
          {
            "node": "Send to Client",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update a database page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SearchConsultant1": {
      "main": [
        [
          {
            "node": "BuildConsultantMessage1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BuildConsultantMessage1": {
      "main": [
        [
          {
            "node": "Send to Consultant1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build Proposal - Alternative": {
      "main": [
        [
          {
            "node": "Send to Client1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update a database page1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Client": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0e282e0e-a3e8-4c8b-a8a4-69a668754874",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c639fe7ebeb422477546545535913c1fe6d467efc75f0ba65b23a5e5a0935928"
  },
  "id": "uOe0LMVLLlUpDhoj",
  "tags": []
}