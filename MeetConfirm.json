{
  "name": "MeetConfirm",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "857d7f25-9acc-491d-b21d-1bf35a48d7ce",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "jsCode": "const { DateTime } = require('luxon');\n\n// Pega a data/hora atual no fuso de São Paulo\nlet now = DateTime.now().setZone('America/Sao_Paulo');\nlet businessDaysToAdd = $input.first().json.daysToConfirm;\nlet targetDate = now;\n\nwhile (businessDaysToAdd > 0) {\n  targetDate = targetDate.plus({ days: 1 });\n  // Considera sábado (6) e domingo (7) como não úteis\n  if (targetDate.weekday !== 6 && targetDate.weekday !== 7) {\n    businessDaysToAdd--;\n  }\n}\n\n// Formata a data para o formato que o Google Calendar entende (YYYY-MM-DD)\nconst startDate = targetDate.startOf('day').toISODate();\nconst endDate = targetDate.plus({ days: 1 }).endOf('day').toISODate();\n\n// Retorna as datas para os próximos nós usarem\nreturn [{\n  json: {\n    startDate: startDate,\n    endDate: endDate\n  }\n}];\n//3.  Execute este nó clicando no ícone de \"play\" nele. Você deve ver na saída as datas de início e fim para daqui a 3 dias úteis.\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        432,
        48
      ],
      "id": "153e756e-d71b-4202-b04d-6eacb5aebed2",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "c_dba7b64ba03811cf4ca158de25fa67cde30121350c64bb36cf1d2dc798750900@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "HC - Compromisso"
        },
        "returnAll": true,
        "timeMin": "={{ $json.startDate }}",
        "timeMax": "={{ $json.endDate }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        656,
        48
      ],
      "id": "ea448fc2-0589-45ce-ae3e-a1541315829f",
      "name": "Get many events",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "Bct71lYLp9OoL4OX",
          "name": "Google HC"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1296,
        32
      ],
      "id": "e279332c-400d-483e-b282-cb9a0d480a99",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "48f76e6a-7bda-485a-b934-095a9e35103e",
              "name": "nomeCompromisso",
              "value": "={{ $json.summary }}",
              "type": "string"
            },
            {
              "id": "89c05576-a2b7-4847-983a-75640b641eee",
              "name": "emailAgendado1",
              "value": "={{ $json.attendees[0].email }}",
              "type": "string"
            },
            {
              "id": "79754a64-d95a-4ef1-a363-3795735ab88a",
              "name": "emailAgendado2",
              "value": "={{ $json.attendees[1].email }}",
              "type": "string"
            },
            {
              "id": "3881b053-210b-4cb9-a746-0dbda0aa8176",
              "name": "dataReuniao",
              "value": "={{ DateTime.fromISO($json.start.dateTime).toFormat('dd/MM') }}",
              "type": "string"
            },
            {
              "id": "8215e14f-8897-4361-bf35-dec0f6c96337",
              "name": "diaSemana",
              "value": "={{ DateTime.fromISO($json.start.dateTime).setLocale('pt-BR').toFormat('cccc') }}",
              "type": "string"
            },
            {
              "id": "21cd5c4a-94b6-423a-8783-058a31a32136",
              "name": "horaInicio",
              "value": "={{ DateTime.fromISO($json.start.dateTime).toFormat('HH:mm') }}",
              "type": "string"
            },
            {
              "id": "b89a8557-3e88-42f1-9480-14433051108e",
              "name": "horaFim",
              "value": "={{ DateTime.fromISO($json.end.dateTime).toFormat('HH:mm') }}",
              "type": "string"
            },
            {
              "id": "1fdb6822-d194-498c-9486-ac4ed33b9969",
              "name": "dataReuniaoISO",
              "value": "={{ $json.start.dateTime }}",
              "type": "string"
            },
            {
              "id": "33b1bd11-ce81-48cc-88ea-a3d946099794",
              "name": "arrayEmail",
              "value": "={{ $json.attendees }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1088,
        32
      ],
      "id": "ca3dac55-a20c-425f-b849-a9df38cc7b4c",
      "name": "DadosAgenda"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c71e238f-567c-4fae-a3f3-dc6f01a1b373",
              "name": "consultorEmail",
              "value": "gabriel@hungaroconsultoria.com.br",
              "type": "string"
            },
            {
              "id": "b1e1113b-da16-41ef-9ae6-4b7b2e437a67",
              "name": "clienteName",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "3ab1feee-f5cf-4ceb-a3d7-19a39216e5aa",
              "name": "clienteEmail",
              "value": "={{ $json.property_e_mail }}",
              "type": "string"
            },
            {
              "id": "47903255-54b9-4974-890d-51fac00310ce",
              "name": "clientePhone",
              "value": "={{ $json.property_telefone }}",
              "type": "string"
            },
            {
              "id": "057e483f-6dc1-4c42-ad0d-24c117406204",
              "name": "clienteChatId",
              "value": "={{ $json.property_telefone.replace(/\\D/g, '') }}@s.whatsapp.net",
              "type": "string"
            },
            {
              "id": "5f4a529c-b9ad-4f44-932e-5ab83748c610",
              "name": "clienteNick",
              "value": "={{ $json.property_apelido_razao_social }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        432,
        304
      ],
      "id": "24f155bf-41e8-4406-be59-c6371339c7bd",
      "name": "DadosNotion"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        880,
        304
      ],
      "id": "0d54fc16-a6de-40b6-a458-1b7b5f759762",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "bf1094d6-c997-456f-82eb-cd30352c85c3",
          "mode": "list",
          "cachedResultName": "Lista de Contatos",
          "cachedResultUrl": "https://www.notion.so/bf1094d6c997456f82ebcd30352c85c3"
        },
        "returnAll": true,
        "filterType": "manual",
        "filters": {
          "conditions": [
            {
              "key": "E-mail|email",
              "condition": "equals",
              "emailValue": "={{ $('DadosAgenda').item.json.emailAgendado1 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        208,
        304
      ],
      "id": "e844f8da-28a8-413c-8332-4c6c1394d1ea",
      "name": "Get many database pages",
      "credentials": {
        "notionApi": {
          "id": "D1pXvNxNoBaVi0WB",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        0,
        112
      ],
      "id": "be4db41e-30d5-4da7-9f78-82ff5f993d7a",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "151df444-7823-4646-963b-0350a8764127",
              "name": "daysToConfirm",
              "value": 4,
              "type": "number"
            },
            {
              "id": "ccca0d45-c52d-482e-abb5-0625b78f4abf",
              "name": "evolutionInstance",
              "value": "Agente_Agendamento_HC",
              "type": "string"
            },
            {
              "id": "20d7f653-1367-492d-b77f-62ca007cd49c",
              "name": "botName",
              "value": "Assistente HC",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        288,
        48
      ],
      "id": "9ee64f38-af1f-4696-bceb-49b72089c046",
      "name": "ConfirmGlobal"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('ConfirmGlobal').item.json.evolutionInstance }}",
        "remoteJid": "={{ $('DadosNotion').item.json.clientePhone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1472,
        304
      ],
      "id": "11ca3e44-180a-4a0e-9930-25ab91a205e4",
      "name": "Enviar texto1",
      "credentials": {
        "evolutionApi": {
          "id": "j5AbWpMg04wmHEJE",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Nome do Cliente: {{ $('DadosNotion').item.json.clienteName }} (considerar apenas primeiro nome)\nApelido: {{ $('DadosNotion').item.json.clienteNick }}\nHora Atual: {{ $now }}\nData da Reunião: {{ $('DadosAgenda').item.json.dataReuniao }}\nDia da Semana: {{ $('DadosAgenda').item.json.diaSemana }}\nHora de Início: {{ $('DadosAgenda').item.json.horaInicio }}\nHora de Fim: {{ $('DadosAgenda').item.json.horaFim }}\nNome do Evento: {{ $('DadosAgenda').item.json.nomeCompromisso }} (caso tenha o nome do cliente retirar do nome do evento)",
        "options": {
          "systemMessage": "=##Função\n\nVocê é um assistente de agendamento de reuniões da Hungaro Consultoria, uma empresa de planejamento financeiro.\n\nSua primeira função é enviar mensagem de confirmação de reuniões e lembrar os clientes de enviarem os documentos e informações necessárias para a próxima reunião até data específica.\n\nAlém da função primária você também irá tirar dúvidas sobre o agendamento de reuniões, documentos necessários para que a reunião aconteça da melhor forma.\n\nVocê deve iniciar a conversa com um Muito bom dia, boa tarde ou boa noite a depender do horário atual, além de chamar sempre o cliente pelo nome.\t\nSeguindo o padrão brasileiro de data e hora (DD/MM/AAAA e HH), opere no fuso horário \"America/Sao_Paulo\". \n\nHora atual: {{ $now }}\nNome do cliente:  Caso a variável Apelido tenha sido preenchida usar ela como Nome do Cliente, caso contrário, use a variável Nome do Cliente.\n\n## Documentos Necessários para Reunião\n- Extratos bancários das contas correntes;\n- Faturas dos cartões de crédito;\n- Lista de acontecimentos previstos para os próximos meses, como aniversário, eventos, viagens, datas comemorativas, renovações de assinaturas ou serviços...\n\n*Os documentos devem ser enviados em formato PDF e CSV/Excel para o e-mail {{ $('DadosNotion').item.json.consultorEmail }}\n\n##Regras\n\n- Use o exemplo a baixo para ter um guia de como montar a mensagem.\n- Os valores da mensagem de exemplo que estão entre [] devem ser substituídos pelas variáveis definidas no promp de user message\n\n##Exemplo de mensagem\nMuuuuito bom dia, [Nome do Cliente], tudo bem?\n\nGostaria de confirmar nossa próxima reunião de [Nome do Evento] agendada para *[Dia da Semana] - [Data da Reunião] às [Hora de Início]*. Para que possamos otimizar nosso tempo e que seu planejamento financeiro seja o mais completo possível, peço que, por gentileza, encaminhe os seguintes documentos até *[Data da reunião - 2 dias úteis] às 10h*:\n\n📌 *Extrato bancário* da data da nossa última reunião até hoje.\n\n📌 *Faturas de cartão de crédito* do mesmo período.\n\n📌 *Lista de acontecimentos previstos para os próximos meses ainda não planejados.*\n\nPor favor, envie os arquivos nos formatos *PDF* e também em *CSV ou Excel*.\n\nPode fazer o envio através desse e-mail: gabriel@hungaroconsultoria.com.br\n\nCaso tenha alguma dúvida ou precise de qualquer esclarecimento, estou à disposição.\n\nAguardo seu retorno e nos vemos em breve!\n\nAtenciosamente, {{ $('ConfirmGlobal').item.json.botName }}.\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        1088,
        304
      ],
      "id": "111e0a67-08ef-4c14-a735-e594459dfd69",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1088,
        480
      ],
      "id": "52806437-1e6e-4743-a70f-82987cfac8fe",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "nJopBduo6R0Rmkvt",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "de0c6516-1aa2-4411-ba7e-f7b9b19ac3c2",
              "leftValue": "={{ $json.attendees }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        864,
        48
      ],
      "id": "cdd361a2-56a7-47ae-8b94-125751fede72",
      "name": "If"
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "ConfirmGlobal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Get many events",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many events": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Get many database pages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DadosAgenda": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DadosNotion": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many database pages": {
      "main": [
        [
          {
            "node": "DadosNotion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "ConfirmGlobal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ConfirmGlobal": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Enviar texto1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "DadosAgenda",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7dc6ccd7-ed08-4919-a6fc-fd4a4008a456",
  "meta": {
    "instanceId": "c639fe7ebeb422477546545535913c1fe6d467efc75f0ba65b23a5e5a0935928"
  },
  "id": "MIGWxsVABQ7E4uYm",
  "tags": []
}